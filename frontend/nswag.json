{
    "runtime": "Net60",
    "defaultVariables": null,
    "documentGenerator": {
        "fromDocument": {
            "json": "../shared/openapi.json",
            "url": "http://redocly.github.io/redoc/openapi.yaml",
            "output": null
        }
    },
    "codeGenerators": {
        "openApiToTypeScriptClient": {
            "className": "{controller}Api",
            "moduleName": "",
            "namespace": "",
            "typeScriptVersion": 2.7,
            "template": "Angular",
            "promiseType": "Promise",
            "httpClass": "HttpClient",
            "withCredentials": false,
            "useSingletonProvider": true,
            "injectionTokenType": "InjectionToken",
            "rxJsVersion": 6.0,
            "dateTimeType": "String",
            "nullValue": "Undefined",
            "generateClientClasses": true,
            "generateClientInterfaces": false,
            "generateOptionalParameters": true,
            "exportTypes": true,
            "wrapDtoExceptions": false,
            "exceptionClass": "SwaggerException",
            "clientBaseClass": null,
            "wrapResponses": false,
            "wrapResponseMethods": [],
            "generateResponseClasses": true,
            "responseClass": "SwaggerResponse",
            "protectedMethods": [],
            "configurationClass": null,
            "useTransformOptionsMethod": false,
            "useTransformResultMethod": false,
            "generateDtoTypes": true,
            "operationGenerationMode": "MultipleClientsFromOperationId",
            "markOptionalProperties": true,
            "generateCloneMethod": true,
            "typeStyle": "Class",
            "enumStyle": "Enum",
            "useLeafType": false,
            "classTypes": [],
            "extendedClasses": [],
            "extensionCode": null,
            "generateDefaultValues": true,
            "excludedTypeNames": [],
            "excludedParameterNames": [],
            "handleReferences": false,
            "generateConstructorInterface": true,
            "convertConstructorInterfaceData": false,
            "importRequiredTypes": true,
            "useGetBaseUrlMethod": false,
            "baseUrlTokenName": "API_BASE_URL",
            "queryNullValue": "",
            "inlineNamedDictionaries": false,
            "inlineNamedAny": false,
            "typeNameGeneratorType": null,
            "propertyNameGeneratorType": null,
            "enumNameGeneratorType": null,
            "serviceHost": ".",
            "serviceSchemes": null,
            "output": "src/communication/main.api.ts"
        }
    }
}
